<%= render 'github_section', :link => "https://github.com/zsll/oor_4"%>
Want to add share feature in your blog page? Actually it's pretty easy. Check out <%= link_to "Facebook Like Button", "https://developers.facebook.com/docs/reference/plugins/like/" %>, <%= link_to "Google +1 Button", "https://developers.google.com/+/web/+1button/?hl=en" %> and <%= link_to "Tweet Button", "https://twitter.com/about/resources/buttons#tweet" %>, and you will find a configurator is provided to generate code for these social button. When working on a rails app, you can even save the 'copy and paste' effort with the help of <%= link_to "social-buttons gem", "https://github.com/iffyuva/social-buttons"%>.

<br>
<br>
Step 1.
Include the <%= link_to "social-buttons gem", "https://github.com/iffyuva/social-buttons"%> in your Gemfile.
<% code = "gem \"social-buttons\", git: \"git://github.com/kristianmandrup/social-buttons.git\""%>
<%= render 'code_section', :title => "Gemfile", :code => code %>
Then install the gem.
<% code = "$ bundle install" %>
<%= render 'code_section', :title => "terminal", :code => code %>
Unfortunately this is not the end of the set up, as you may have expected. It seems this gem is not perfectly intelligent (After all you are gonna go through the steps below without any gem, or even without rails).

<br>
<br>
Step 2.
Add the following javascript to the head of your app.
<% code = "\<%= javascript_include_tag \"https://apis.google.com/js/plusone.js\" %\>" %>
<%= render 'code_section', :title => "/app/views/layouts/application.html.erb", :code => code, :lang => :erb %>
Now 'g+' and 'tweet' button should be functional. If you are not messing with the 'Facebook like' button, this can be the end of your journey. Well, you don't want to ignore Facebook users. Right?

<br>
<br>
Step 3.
Put your facebook app id (Don't have one? Get it <%= link_to "here", "https://developers.facebook.com/apps" %>) in <%= link_to "the constant class under the initializers", "/articles/2" %>.
<% code = "class OORConstant
  def self.facebook_app_id
    return 'YOUR_FACEBOOK_APP_ID'
  end
end" %>
<%= render 'code_section', :title => "/app/config/initializers/constants.rb", :code => code, :lang => :rb %>

Step 4.
More hack for the 'like' button. Put the code below within the <code>body</code> of your app.
<% code = "
\<div id=\"fb-root\"\>\</div\>
\<script\>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = \"//connect.facebook.net/en_US/all.js#xfbml=1&appId=\<%=OORConstant.facebook_app_id%\>\";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));\</script\>" %>
<%= render 'code_section', :title => "/app/views/layouts/application.html.erb", :code => code, :lang => :erb %>

Finally, we can call the helpers to render the buttons. I put them in a template.
<% code = "\<div class=\"oor-social-buttons\"\>
	\<div class=\"facebook-like\"\>
		\<div class=\"fb-like\" data-href=\"\<%=url%\>\" data-send=\"false\" data-layout=\"button_count\" data-width=\"450\" data-show-faces=\"false\"\>\</div\>
	\</div\>
	\<div class=\"google-plus\"\>\<%= google_plus_button(size: \"medium\", href: url, annotation: \"bubble\") %\>\</div\>
	\<div class=\"twitter-tweet\"\>\<%= tweet_button(url: url, text: title, count: \"horizontal\") %\>\</div\>
\</div\>
"%>
<%= render 'code_section', :title => "/app/views/layouts/_social_section.html.erb", :code => code, :lang => :erb %>
Now you may use this template from anywhere you want to be sharable.
<% code = "\<%= render 'layouts/social_section', :title =\> \"I don't really like apple\", :url =\> \"http://www.some_site_you_really_want_to_share.com\" %\>" %>
<%= render 'code_section', :title => "/path/to/your/view.html.erb", :code => code, :lang => :erb %>
Detailed config options are available from <%= link_to "social-buttons gem", "https://github.com/iffyuva/social-buttons"%>. Wait. Why not use the <code>like_button</code> method for the 'like' button (trouble maker)? The reason is that the <code>:href</code> option seems not working. So you can not freely use this helper to point your like to a specific link. It will always like the url of the current page. I have to use the native code provided by Facebook. You may play with my <%= link_to "source code for demo", "https://github.com/zsll/oor_4" %> to confirm this. Remember to replace the facebook app id in <code>/app/config/initializers/constants.rb</code>.

<br>
<br>
Another gem worths looking into is the <%= link_to "social-share-button", "https://github.com/huacnlee/social-share-button" %>. It's obviously more powerful, especially for apps targeting the Chinese market. The only downside is that it only works for apps with <%= link_to "coffeescript", "https://github.com/josh/ruby-coffee-script"%> and <%= link_to "sass", "https://github.com/nex3/sass" %> gem, while I believe somebody is already on this issue.